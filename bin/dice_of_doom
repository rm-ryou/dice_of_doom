#! /usr/bin/env ruby

$:.unshift File.join(__dir__, '../lib')
require "dice_of_doom"

BOARD_SIZE    = ARGV[0] == nil ? 2 : ARGV[0].to_i
BOARD_HEXNUM  = BOARD_SIZE ** 2
NUM_PLAYERS   = 2
MAX_DICE      = 3

# DiceOfDoom::GameTree::Game.new
DiceOfDoom::Command.new


# tree =::DiceOfDoom::GameTree::Tree.new()
#     #           10
#     #          /   \
#     #         /     \
#     #        /       \   
#     #       8         5
#     #      /|\      /|\ \ 
#     #     / | \    / | \ \
#     #    2  1  6  7  8 3  4
#     #      / \     \     /| \
#     #     9  11     -1  2 1  3
#     #    -----------------------
#     #    Constructing N-Arr tree
    
#     #  First element of tree
#     tree.root = DiceOfDoom::GameTree::Node.new(10)
#     tree.root.add_child(8)
#     tree.root.add_child(5)
#     #  Add child node [2,1,6] in node (8)
#     tree.root.child[0].add_child(2)
#     tree.root.child[0].add_child(1)
#     tree.root.child[0].add_child(6)
#     #  Add child node [9,11] in node (1)
#     tree.root.child[0].child[1].add_child(9)
#     tree.root.child[0].child[1].add_child(11)
#     #  Add child node [7  8 3  4] in node (5)
#     tree.root.child[1].add_child(7)
#     tree.root.child[1].add_child(8)
#     tree.root.child[1].add_child(3)
#     tree.root.child[1].add_child(4)
#     #  Add child node [-7] in node (4)
#     tree.root.child[1].child[0].add_child(-1)
#     #  Add child node [2,1,3] in node (7)
#     tree.root.child[1].child[3].add_child(2)
#     tree.root.child[1].child[3].add_child(1)
#     tree.root.child[1].child[3].add_child(3)
#     print("  Preorder : \n")
#     #  Print tree element
#     tree.show(tree.root)
